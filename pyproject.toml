[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
# PYSCAN-35: Decide on definitive package name
name = "py-sonar-scanner"
version = "0.0.6"
authors = [
  "Guillaume Dequenne <guillaume.dequenne@sonarsource.com>",
  "Jeremi Do Dinh <jeremi.dodinh@sonarsource.com>",
  "Maksim Grebeniuk <maksim.grebeniuk@sonarsource.com>",
  "David Kunzmann <david.kunzmann@sonarsource.com>"
]
description = "Sonar Scanner for the Python Ecosystem"
readme = "README.md"
license = "LGPL-3.0-only"
keywords = [
  "sonar",
  "sonarqube",
  "sonarcloud",
  "cleancode"
]
classifiers = [
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Software Development :: Quality Assurance",
]
packages = [{ include = "py_sonar_scanner", from = "src" }]

[tool.poetry.dependencies]
python = ">=3.8"
setuptools = "69.0.3"
toml = ">=0.10.2"
pyfiglet= ">=0.8.0"  

[[tool.poetry.source]]
name = "repox"
url = "https://repox.jfrog.io/artifactory/api/pypi/sonarsource-pypi/simple/"
priority = "default"

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[project.urls]
Homepage = "https://github.com/SonarSource/sonar-scanner-python"
Repository = "https://github.com/SonarSource/sonar-scanner-python"

[tool.poetry.scripts]
"py-sonar-scanner" = "py_sonar_scanner.__main__:scan"

[tool.poetry.group.dev.dependencies]
coverage = ">=7.3.3"
pytest = ">=7.4.3"
pytest-cov = ">=4.1.0"
licenseheaders = ">=0.8.8"
black = ">=23.12.0"
mypy = ">=1.7.1"

[tool.pytest.ini_options]
pythonpath = [
  "src",
]
addopts = [
  "--import-mode=importlib",
]

[tool.black]
line-length = 120
target-version = ["py38", "py39", "py310", "py311", "py312"]


[tool.coverage.run]
branch = true
relative_files = true

[tool.pytype]
inputs = ['src']
