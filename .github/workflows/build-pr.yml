name: build-pr

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      id-token: write     # required by SonarSource/vault-action-wrapper
      contents: read      # required by actions/checkout
      pull-requests: read # required by SonarSource/sonarcloud-github-action
    strategy:
      fail-fast: false

    steps:
    - name: Get vault secrets
      id: secrets
      uses: SonarSource/vault-action-wrapper@v2
      with:
        secrets: |
          development/artifactory/token/{REPO_OWNER_NAME_DASH}-private-reader access_token | ARTIFACTORY_PASSWORD;
          development/artifactory/token/{REPO_OWNER_NAME_DASH}-qa-deployer access_token | ARTIFACTORY_PASSWORD_QA;
          development/kv/data/repox url | REPOX_URL;
          development/kv/data/sonarcloud token | SONARCLOUD_TOKEN;
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: |
          3.8
          3.9
          3.10
          3.11
          3.12
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install hatch build twine
    - name: Check tests and generate coverage
      run: |
        hatch run test:cov_xml
      env:
        ARTIFACTORY_ACCESS_TOKEN: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_PASSWORD }}
    - name: Check formatting
      run: |
        hatch run tool:format
    - name: Check licensing
      run: |
        hatch run tool:license_check
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ fromJSON(steps.secrets.outputs.vault).SONARCLOUD_TOKEN }}
    - name: Build and publish
      env:
        ARTIFACTORY_PYPI_DEPLOYER_USER: vault-SonarSource-sonar-scanner-python-qa-deployer
        ARTIFACTORY_PYPI_DEPLOYER_API_KEY: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_PASSWORD_QA }}
      run: |
        hatch version patch
        hatch version $(hatch version).dev${{ github.run_number }}
        hatch build
        twine upload --repository-url https://repox.jfrog.io/artifactory/api/pypi/sonarsource-pypi/ dist/* --username $ARTIFACTORY_PYPI_DEPLOYER_USER --password $ARTIFACTORY_PYPI_DEPLOYER_API_KEY --verbose
