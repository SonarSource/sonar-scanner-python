name: build-pr

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: 
      - master
      - 'feature/**'

jobs:
  env:
    POETRY_VERSION: 1.8.1
  integration_tests:
    runs-on: ubuntu-latest
    permissions:
      id-token: write     # required by SonarSource/vault-action-wrapper
      contents: read      # required by actions/checkout
    strategy:
      fail-fast: false
    steps:
    - name: Get vault secrets
      id: secrets
      uses: SonarSource/vault-action-wrapper@v3
      with:
        secrets: |
          development/artifactory/token/{REPO_OWNER_NAME_DASH}-private-reader role | ARTIFACTORY_ROLE;
          development/artifactory/token/{REPO_OWNER_NAME_DASH}-private-reader access_token | ARTIFACTORY_PASSWORD;
          development/kv/data/repox url | REPOX_URL;
    - uses: actions/checkout@v3
    - name: Install Poetry
      run: |
        pipx install poetry=={POETRY_VERSION}
    - name: Set up Python 
      uses: actions/setup-python@v4
      with:
        python-version: |
          3.12
    - name: Install Poetry
      run: |
        pipx install poetry=={POETRY_VERSION}
    - name: Install its dependencies
      working-directory: ./its
      env:
        ARTIFACTORY_USERNAME: vault-${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_ROLE }}
        ARTIFACTORY_PASSWORD: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_PASSWORD }}
        REPOX_URL: ${{ fromJSON(steps.secrets.outputs.vault).REPOX_URL }}
      run: |
        poetry config repositories.repox "${REPOX_URL}/api/pypi/sonarsource-pypi/simple/"
        poetry config http-basic.repox "${ARTIFACTORY_USERNAME}" "${ARTIFACTORY_PASSWORD}"
        poetry install
    - name: Run integration tests
      working-directory: ./its
      run: |
        poetry run pytest 
