env:
  ARTIFACTORY_URL: VAULT[development/kv/data/repox data.url]
  ARTIFACTORY_PRIVATE_USERNAME: vault-${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-private-reader
  ARTIFACTORY_PRIVATE_ACCESS_TOKEN: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-private-reader access_token]
  ARTIFACTORY_DEPLOY_USERNAME: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-qa-deployer username]
  ARTIFACTORY_DEPLOY_ACCESS_TOKEN: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-qa-deployer access_token]
  ARTIFACTORY_DEPLOY_REPO: sonarsource-pypi-public-qa
  GITHUB_TOKEN: VAULT[development/github/token/licenses-ro token]
  DEPLOY_PULL_REQUEST: "true"
  POETRY_VIRTUALENVS_PATH: "~/.cache/poetry/venvs"
  POETRY_CACHE_DIR: "~/.cache/poetry/pypoetry"
  SONARQUBE_VERSION: 25.3.0.104237
  # Use bash (instead of sh on linux or cmd.exe on windows)
  CIRRUS_SHELL: bash
  JF_ALIAS: "jfrog"
  CRON_NIGHTLY_JOB_NAME: "nightly"

only_if: $CIRRUS_USER_COLLABORATOR == 'true' && $CIRRUS_TAG == "" && ($CIRRUS_PR != "" || $CIRRUS_BRANCH == 'master' || $CIRRUS_BRANCH =~ "branch-.*")

.jfrog_config_template: &JFROG_CONFIG_TEMPLATE
  jfrog_config_script:
    - $JF_ALIAS config add repox --artifactory-url "$ARTIFACTORY_URL" --access-token "$ARTIFACTORY_PRIVATE_ACCESS_TOKEN"
    - $JF_ALIAS poetry-config --server-id-resolve repox --repo-resolve sonarsource-pypi
    - $JF_ALIAS poetry install --build-name="$CIRRUS_REPO_NAME" --build-number="$CI_BUILD_NUMBER"

poetry_cache_template: &POETRY_CACHE
  poetry_cache:
    folder: ~/.cache/poetry/
    fingerprint_script: cat poetry.lock

.poetry_macos_template: &POETRY_MACOS_TEMPLATE
  <<: *POETRY_CACHE
  jfrog_install_script:
    - brew install jfrog-cli
    - jf intro
  poetry_install_script:
    - brew install poetry
    - poetry config keyring.enabled false # Keyring is locked in macOS VM and not needed for downloading dependencies
  <<: *JFROG_CONFIG_TEMPLATE

macos_worker_template: &MACOS_WORKER_DEFINITION
  persistent_worker:
    isolation:
      tart:
        image: ghcr.io/cirruslabs/macos-sonoma-xcode:15.3
        cpu: 3
        memory: 6G
    resources:
      tart-vms: 1
    labels:
      envname: prod

qa_macos_task:
  alias: qa_macos
  only_if: $CIRRUS_CRON == "macos-its-cron"
  name: "[macOS] Run tests"
  <<: [*MACOS_WORKER_DEFINITION, *POETRY_MACOS_TEMPLATE]
  env:
    PATH: "/Users/admin/.local/bin:$PATH"
  install_uv_script:
    - brew install uv
  test_39_script:
    - .cirrus/run_macos_tests.sh "3.9.18"
  test_310_script:
    - .cirrus/run_macos_tests.sh "3.10.13"
  test_311_script:
    - .cirrus/run_macos_tests.sh "3.11.7"
  test_312_script:
    - .cirrus/run_macos_tests.sh "3.12.1"
  test_313_script:
    - .cirrus/run_macos_tests.sh "3.13.2"

its_macos_task:
  name: "[macOS] Integration Tests"
  alias: its_macos
  only_if: $CIRRUS_CRON == "macos-its-cron"
  # the macOS workers are only available from Monday 06:45 CEST to Friday 20:00 CEST (see https://xtranet-sonarsource.atlassian.net/wiki/spaces/Platform/pages/3447980037/MacOS+Persistent+Workers+User+Guide+-+Cirrus+CI)
  <<: [*MACOS_WORKER_DEFINITION, *POETRY_MACOS_TEMPLATE]
  sonarqube_cache:
    folder: sonarqube_cache/
    populate_script: mkdir -p sonarqube_cache && wget -q https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-$SONARQUBE_VERSION.zip -O sonarqube_cache/sonarqube.zip
    fingerprint_script: echo "sonarqube-$SONARQUBE_VERSION"
  its_script:
    - .cirrus/run_its.sh
